const { ethers } = require("hardhat");

async function main() {
  console.log("ÂºÄÂßãÈÉ®ÁΩ≤ LipsNft ÂêàÁ∫¶...");

  // Ëé∑ÂèñÈÉ®ÁΩ≤ËÄÖË¥¶Êà∑
  const [deployer] = await ethers.getSigners();
  console.log("ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
  console.log("Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.formatEther(await ethers.provider.getBalance(deployer.address)), "ETH");

  // Ëé∑ÂèñÂêàÁ∫¶Â∑•ÂéÇ
  const LipsNft = await ethers.getContractFactory("LipsNft");
  
  // ÈÉ®ÁΩ≤ÂêàÁ∫¶
  console.log("Ê≠£Âú®ÈÉ®ÁΩ≤ÂêàÁ∫¶...");
  const lipsNft = await LipsNft.deploy();
  
  // Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàê
  await lipsNft.waitForDeployment();
  const contractAddress = await lipsNft.getAddress();
  
  console.log("‚úÖ LipsNft ÂêàÁ∫¶ÈÉ®ÁΩ≤ÊàêÂäü!");
  console.log("ÂêàÁ∫¶Âú∞ÂùÄ:", contractAddress);
  console.log("‰∫§ÊòìÂìàÂ∏å:", lipsNft.deploymentTransaction().hash);
  
  // È™åËØÅÂêàÁ∫¶ÈÉ®ÁΩ≤
  console.log("\nÈ™åËØÅÂêàÁ∫¶‰ø°ÊÅØ...");
  const name = await lipsNft.name();
  const symbol = await lipsNft.symbol();
  const maxSupply = await lipsNft.MAX_SUPPLY();
  const owner = await lipsNft.owner();
  
  console.log("ÂêàÁ∫¶ÂêçÁß∞:", name);
  console.log("ÂêàÁ∫¶Á¨¶Âè∑:", symbol);
  console.log("ÊúÄÂ§ß‰æõÂ∫îÈáè:", maxSupply.toString());
  console.log("ÂêàÁ∫¶Êã•ÊúâËÄÖ:", owner);
  
  // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØÂà∞Êñá‰ª∂
  const deploymentInfo = {
    contractName: "LipsNft",
    contractAddress: contractAddress,
    deployer: deployer.address,
    deploymentTime: new Date().toISOString(),
    network: (await ethers.provider.getNetwork()).name,
    chainId: (await ethers.provider.getNetwork()).chainId.toString(),
    transactionHash: lipsNft.deploymentTransaction().hash,
    contractInfo: {
      name: name,
      symbol: symbol,
      maxSupply: maxSupply.toString(),
      owner: owner
    }
  };
  
  const fs = require("fs");
  const path = require("path");
  
  // Á°Æ‰øù deployments ÁõÆÂΩïÂ≠òÂú®
  const deploymentsDir = path.join(__dirname, "../deployments");
  if (!fs.existsSync(deploymentsDir)) {
    fs.mkdirSync(deploymentsDir, { recursive: true });
  }
  
  // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ
  const deploymentFile = path.join(deploymentsDir, "LipsNft-deployment.json");
  fs.writeFileSync(deploymentFile, JSON.stringify(deploymentInfo, null, 2));
  
  console.log("\nüìù ÈÉ®ÁΩ≤‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞:", deploymentFile);
  
  console.log("\nüéâ ÈÉ®ÁΩ≤ÂÆåÊàê!");
  console.log("‰Ω†Áé∞Âú®ÂèØ‰ª•:");
  console.log(`1. ËÆæÁΩÆÂü∫Á°Ä URI: await contract.setBaseURI("https://your-metadata-url/")`);
  console.log(`2. Èì∏ÈÄ† NFT: await contract.safeMint("${deployer.address}")`);
}

// ÊâßË°åÈÉ®ÁΩ≤ËÑöÊú¨
main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:");
    console.error(error);
    process.exit(1);
  });
