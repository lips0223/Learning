{"abi":[{"type":"fallback","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/ETF-Upgradeable/flattened/ETFProxyFactory_flattened.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=contracts/lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":halmos-cheatcodes/=contracts/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=contracts/lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/src/ETF-Upgradeable/flattened/ETFProxyFactory_flattened.sol\":{\"keccak256\":\"0x9c5bd81330f080b1b7b7715ede6624e34f650e1b7a1b200fddeb759b6ac5613a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0581c5caa9431e4e0cdebc9de43febb8556e80e43f40851be2e466304a9a85e7\",\"dweb:/ipfs/QmbE3DWHmMi6sMw3Dtpj8JFVEo5MjxT8uUFk9maMCf7qQE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=contracts/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=contracts/lib/openzeppelin-contracts/contracts/","erc4626-tests/=contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","halmos-cheatcodes/=contracts/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=contracts/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=contracts/lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/src/ETF-Upgradeable/flattened/ETFProxyFactory_flattened.sol":"Proxy"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/src/ETF-Upgradeable/flattened/ETFProxyFactory_flattened.sol":{"keccak256":"0x9c5bd81330f080b1b7b7715ede6624e34f650e1b7a1b200fddeb759b6ac5613a","urls":["bzz-raw://0581c5caa9431e4e0cdebc9de43febb8556e80e43f40851be2e466304a9a85e7","dweb:/ipfs/QmbE3DWHmMi6sMw3Dtpj8JFVEo5MjxT8uUFk9maMCf7qQE"],"license":"MIT"}},"version":1},"id":66}